{% form_theme statsForm '@NetBSCore/form/base.theme.twig' %}
{{ registerJs('https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js') }}
{{ registerCss('https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.css') }}
{{ registerJs(asset('bundles/netbscore/lib/datetimepicker/bootstrap-datetimepicker.min.js')) }}
{{ registerCss(asset('bundles/netbscore/lib/datetimepicker/bootstrap-datetimepicker.min.css')) }}

<div class="d-flex stats-control">
  <div class="mr-3">{{ form_row(statsForm.begin, { attr: { 'data-val': 'begin' } }) }}</div>
  <div class="mr-3">{{ form_row(statsForm.steps, { attr: { 'data-val': 'steps' } }) }}</div>
  <div>{{ form_row(statsForm.end, { attr: { 'data-val': 'end' } }) }}</div>
</div>

<canvas id="groupe-effectifs"></canvas>
<div id="groupe-effectifs"></div>

{% set chartScript %}
<script>

  const chart = new Chart($('#groupe-effectifs'), {
    type: 'line',
    data: {
      labels: [],
      datasets: [
        {
          label: 'Effectifs',
          data: [],
          backgroundColor: 'rgba(0,123,255,0.11)',
          borderWidth: 3,
          borderColor: '#007bff',
          pointRadius: 1,
          pointHoverRadius: 4,
          pointHoverBackgroundColor: '#007bff',
        }
      ],
    },
    options: {
      aspectRatio: 3,
      legend: {
        display: false,
      },
      scales: {
        xAxes: [{
          ticks: {
            callback: (d) => {
              const pad0 = (v) => v < 10 ? '0' + v : v;
              return pad0(d.getDate()) + '.' + pad0(d.getMonth() + 1) + '.' + d.getFullYear();
            },
          }
        }],
        yAxes: [{
          ticks: {
            callback: function(value) {
              if (Math.floor(value) === value) {
                return value;
              }
            }
          }
        }],
      },
    }
  });

  const statsState = {
    begin: $('.stats-control [data-val="begin"]').val(),
    steps: $('.stats-control [data-val="steps"]').val(),
    end: $('.stats-control [data-val="end"]').val(),
  };

  function refresh() {
     NProgress.start();
      const pathPart = 'begin=' + statsState.begin + '&end=' + statsState.end + '&steps=' + statsState.steps;
      fetch('{{ path('netbs.fichier.groupe.statistics_effectifs', { id: groupe.id }) }}?' + pathPart).then(r => r.json()).then((data) => {

        chart.data.labels.splice(0);
        chart.data.datasets[0].data.splice(0);
        let min = Infinity;
        let max = 0;

        data.forEach((it) => {
          chart.data.labels.push(new Date(it.pallier.date));
          chart.data.datasets[0].data.push(it.count);
          if (min > it.count) min = it.count;
          if (max < it.count) max = it.count;
        });

        const diff = Math.ceil((max - min) / 10);
        chart.options.scales.yAxes[0].ticks.suggestedMin = min - diff;
        chart.options.scales.yAxes[0].ticks.suggestedMax = max + diff;
        chart.update();
        NProgress.done();
      });
    }

  $('.stats-control input').change(function() {
    statsState[$(this).attr('data-val')] = $(this).val();
    refresh();
  });

  refresh();
</script>
{% endset %}

{{ registerScript(chartScript) }}
